# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import benchmark_pb2 as benchmark__pb2


class BenchmarkServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPrograms = channel.unary_unary(
                '/benchmark.BenchmarkService/GetPrograms',
                request_serializer=benchmark__pb2.GetProgramsRequest.SerializeToString,
                response_deserializer=benchmark__pb2.GetProgramsResponse.FromString,
                )
        self.SetEpochTime = channel.unary_unary(
                '/benchmark.BenchmarkService/SetEpochTime',
                request_serializer=benchmark__pb2.SetEpochTimeRequest.SerializeToString,
                response_deserializer=benchmark__pb2.SetEpochTimeResponse.FromString,
                )
        self.GetEpochTime = channel.unary_stream(
                '/benchmark.BenchmarkService/GetEpochTime',
                request_serializer=benchmark__pb2.GetEpochTimeRequest.SerializeToString,
                response_deserializer=benchmark__pb2.GetEpochTimeResponse.FromString,
                )
        self.DelEpochTime = channel.unary_unary(
                '/benchmark.BenchmarkService/DelEpochTime',
                request_serializer=benchmark__pb2.DelEpochTimeRequest.SerializeToString,
                response_deserializer=benchmark__pb2.DelEpochTimeResponse.FromString,
                )


class BenchmarkServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPrograms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetEpochTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEpochTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelEpochTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BenchmarkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPrograms': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrograms,
                    request_deserializer=benchmark__pb2.GetProgramsRequest.FromString,
                    response_serializer=benchmark__pb2.GetProgramsResponse.SerializeToString,
            ),
            'SetEpochTime': grpc.unary_unary_rpc_method_handler(
                    servicer.SetEpochTime,
                    request_deserializer=benchmark__pb2.SetEpochTimeRequest.FromString,
                    response_serializer=benchmark__pb2.SetEpochTimeResponse.SerializeToString,
            ),
            'GetEpochTime': grpc.unary_stream_rpc_method_handler(
                    servicer.GetEpochTime,
                    request_deserializer=benchmark__pb2.GetEpochTimeRequest.FromString,
                    response_serializer=benchmark__pb2.GetEpochTimeResponse.SerializeToString,
            ),
            'DelEpochTime': grpc.unary_unary_rpc_method_handler(
                    servicer.DelEpochTime,
                    request_deserializer=benchmark__pb2.DelEpochTimeRequest.FromString,
                    response_serializer=benchmark__pb2.DelEpochTimeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'benchmark.BenchmarkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BenchmarkService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPrograms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/benchmark.BenchmarkService/GetPrograms',
            benchmark__pb2.GetProgramsRequest.SerializeToString,
            benchmark__pb2.GetProgramsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetEpochTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/benchmark.BenchmarkService/SetEpochTime',
            benchmark__pb2.SetEpochTimeRequest.SerializeToString,
            benchmark__pb2.SetEpochTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEpochTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/benchmark.BenchmarkService/GetEpochTime',
            benchmark__pb2.GetEpochTimeRequest.SerializeToString,
            benchmark__pb2.GetEpochTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelEpochTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/benchmark.BenchmarkService/DelEpochTime',
            benchmark__pb2.DelEpochTimeRequest.SerializeToString,
            benchmark__pb2.DelEpochTimeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
